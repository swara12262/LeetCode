class Solution {
    
    public int numIslands(char[][] grid) {
        int res=0;
        
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]=='1')
                {
                    dfs(i, j, grid);
                    res++;
                }
            }
        }
        return res;
    }
    public void dfs(int i, int j, char[][] grid){
        grid[i][j]='0';
        
        int[] x= {1,-1,0,0};
        int[] y= {0,0,1,-1};
        
        for(int k=0;k<4;k++){
            int i_x= x[k]+i;
            int j_y= y[k]+j;
            
            if(isSafe(i_x, j_y, grid))
                dfs(i_x, j_y, grid);
            
        }
    }
    public boolean isSafe(int i, int j, char[][] g){
        return i>=0 && i<g.length && j>=0&& j<g[0].length && g[i][j]=='1';
    }
}
