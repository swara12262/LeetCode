/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode newHead=null;
        ListNode prev=null;
        int carry = 0;
        while(l1!=null || l2!=null){
            int n1 = l1==null?0:l1.val;
            int n2 = l2==null?0:l2.val;
            int sum  =n1+n2+carry;
            carry = sum/10;
            if(newHead==null){
                ListNode tmp= new ListNode(sum%10);
                prev= newHead= tmp;
            }else{
                ListNode tmp= new ListNode(sum%10);
                prev.next =tmp;
                prev =tmp;
            }
            l1=l1==null? l1: l1.next;
            l2=l2==null? l2: l2.next;    
        }
        if(carry>0){
            prev.next = new ListNode(carry);
        }
        return newHead;
    }
}
