class Solution {
    public String minWindow(String s, String t) {
        int l=0,r=0;
        HashMap<Character, Integer> tmap = new HashMap<Character, Integer>();
        HashMap<Character, Integer> curmap = new HashMap<Character, Integer>();
        String ans= "";
        //fill tmap 
        for(int i=0;i<t.length();i++){
            tmap.put(t.charAt(i), tmap.getOrDefault(t.charAt(i), 0)+1);
        }
        int minRes= Integer.MAX_VALUE;
        String tmp = s.substring(0,1);
        for(int i=0;i<tmp.length();i++){
            curmap.put(tmp.charAt(i), curmap.getOrDefault(tmp.charAt(i), 0)+1);
        }
        while(l<=r && l<s.length() && r<s.length()){
           
            boolean contains = true;
            for(Map.Entry<Character, Integer> en: tmap.entrySet()){
                //we need to exapnd window in this case
                if(!curmap.containsKey(en.getKey()) || curmap.get(en.getKey()) < en.getValue())
                {
                    contains=false;
                    break;
                }
            }
            if(!contains){
                r++;
               if(l<=r && r<s.length())
                   curmap.put(s.charAt(r), curmap.getOrDefault(s.charAt(r), 0)+1);
            }else{
                if(minRes> r-l+1){
                    minRes = r-l+1;
                    ans =s.substring(l,r+1);
                }
                curmap.put(s.charAt(l),curmap.getOrDefault(s.charAt(l), 1)-1);
                l++;
            }
            
        }
        return ans;
        
    }
}
